1. Write a Program to print new list which contains all the first Characters of strings present in a list.....
   LIST_STATES = ["GOA","RAJASTHAN","KARNATAKA","GUJRAT","MANIPUR","MADHYA PRADESH"]
Sol : list=["GOA","RAJASTHAN","KARNATAKA","GUJRAT","MANIPUR","MADHYA PRADESH"]
      l=[]
      for i in list:
          for j in i:
              l.append(i[0])
              break
       print(l)

2. Write a program to replace each string with an integer value in a given list of strings.
   The replacement integer value should be a sum of AScci values of each character of type corresponding string........
   LIST: ['GAnga', 'Tapti', 'Kaveri', 'Yamuna', 'Narmada' ]
Sol : List=['GAnga','Tapti','Kaveri','Yamuna','narmada']
      l=[]
      su=0
      for i in List:
          for j in i:
              su = su + ord(j)
              l.append(su)
          su=0
      print(l)

3. ###### You have to run your Program at 9:00am. Date: 14th April 2020.
   #HINT:
   # You have to use datetime Module or time module..
   # You have to convert your output in #LIST_FORMAT
   # [ '2020-04-13' , '17:11:01.952975' ]
   # you can use this with the helf of IF/Else statement
Sol : import datetime

      string=str(datetime.datetime.now())
      l=string.split(" ")

      if l[0]=="2020-04-14" and l[1]=="9:00:00:000000":
          print("Hello harsh")

4. GIve a tuple:
   tuple = ('a','l','g','o','r','i','t','h','m')
   1. Using the concept of slicing, print the whole tuple
   2. delete the element at the 3rd Index, print the tuple.
Sol : tup=('a','l','g','o','r','i','t','h','m')
      a=len(tup)
      #print tuple concept of slicing
      print(tup[0:a])

      #delete the 3rd index element 
      l=list(tup)
      #print(l)
      l.remove(l[3])
      #print(l)
      t=tuple(l)
      print(t)

5. Take a list REGex=[1,2,3,4,5,6,7,8,9,0,77,44,15,33,65,89,12]
   - print only those numbers greator then 20
   - then print those numbers those are less then 10 or equal to 10
   - store these above two list in two different list.
Sol : Regex=[1,2,3,4,5,6,7,8,9,0,77,44,15,33,65,89,12]
      l1=[]
      l2=[]

      for i in Regex:
          if i > 20:
              l1.append(i)
          elif i <= 10:
              l2.append(i)
      print(l1)
      print(l2)

6. Execute standard LINUX Commands using Python Programming
Sol : Subprocess is a module in Python that allows us to start new applications or processes in Python. 
      This module intends to replace several older modules in python. We can use this module to run 
      other programs or execute Linux commands.


7. Revise *args and **kwargs Concepts
Sol : Args : In Python, the single-asterisk form of *args can be used as a parameter to send a non-keyworded
      variable-length argument list to functions. It is worth noting that the asterisk (*) is the important
      element here, as the word args is the established conventional idiom, though it is not enforced by 
      the language.
      def multiply(*args):
          z = 1
          for num in args:
              z *= num
          print(z)

      multiply(4, 5)
      multiply(10, 9)
      multiply(2, 3, 4)
      multiply(3, 5, 10, 6)

      Kargs : The double asterisk form of **kwargs is used to pass a keyworded, variable-length argument 
      dictionary to a function. Again, the two asterisks (**) are the important element here, as the word 
      kwargs is conventionally used, though not enforced by the language.
      Like *args, **kwargs can take however many arguments you would like to supply to it. However,
      **kwargs differs from *args in that you will need to assign keywords.

      def print_values(**kwargs):
          for key, value in kwargs.items():
              print("The value of {} is {}".format(key, value))

      print_values(my_name="Sammy", your_name="Casey")
      